{
  "$schema": "../schema/configuration.json",
  "meta": {
    "timestamp": "2022-02-06T13:38:23.574152+00:00",
    "sources": [
      "https://github.com/sannybuilder/data",
      "https://github.com/sannybuilder/library"
    ]
  },
  "version": "gtasa_pc_cleo",
  "parent": "gtasa_pc",
  "commands": {
    "0x0a8c": {
      "args": 4,
      "format": "write_memory %1d% size %2d% value %3d% virtual_protect %4d%",
      "desc": "Writes a value to the game memory"
    },
    "0x0a8d": {
      "args": 4,
      "format": "%4d% = read_memory %1d% size %2d% virtual_protect %3d%",
      "desc": "Reads a value from the game memory"
    },
    "0x0a8e": {
      "args": 3,
      "format": "%3d% = %1d% + %2d%",
      "desc": "Adds together two integer values and writes the result into the variable",
      "comment": "int"
    },
    "0x0a8f": {
      "args": 3,
      "format": "%3d% = %1d% - %2d%",
      "desc": "Subtracts the integer value from another integer value and writes the result into the variable",
      "comment": "int"
    },
    "0x0a90": {
      "args": 3,
      "format": "%3d% = %1d% * %2d%",
      "desc": "Multiplies two integer values and writes the result into the variable",
      "comment": "int"
    },
    "0x0a91": {
      "args": 3,
      "format": "%3d% = %1d% / %2d%",
      "desc": "Divides the integer value by another integer value and writes the result into the variable",
      "comment": "int"
    },
    "0x0a92": {
      "format": "stream_custom_script %1s%",
      "desc": "Loads a file with compiled SCM instructions at the given path and runs a new custom script"
    },
    "0x0a93": {
      "format": "terminate_this_custom_script",
      "desc": "Ends the current custom script, preventing further execution"
    },
    "0x0a94": {
      "format": "load_and_launch_custom_mission %1s%"
    },
    "0x0a95": {
      "format": "save_this_custom_script"
    },
    "0x0a96": {
      "args": 2,
      "format": "%2d% = ped %1d% struct",
      "desc": "Gets the address of the ped struct in the game memory by its handle"
    },
    "0x0a97": {
      "args": 2,
      "format": "%2d% = vehicle %1d% struct",
      "desc": "Gets the address of the vehicle struct in the game memory by its handle"
    },
    "0x0a98": {
      "args": 2,
      "format": "%2d% = object %1d% struct",
      "desc": "Gets the address of the object struct in the game memory by its handle"
    },
    "0x0a99": {
      "args": [
        "int"
      ],
      "format": "set_current_directory %1buserdir/rootdir%",
      "desc": "Sets the current working directory (cwd) to a predefined location with a value of 0 or 1, or to an arbitrary path with a string value"
    },
    "0x0a9a": {
      "args": [
        "string",
        "any",
        "any"
      ],
      "format": "%3d% = open_file %1s% mode %2d%",
      "desc": "Opens the file in the specified mode, sets the condition result to True if the open operation has been successful, or to False otherwise, and writes the file handle to the variable",
      "comment": "IF and SET"
    },
    "0x0a9b": {
      "args": 1,
      "format": "close_file %1d%",
      "desc": "Closes the file and frees the memory"
    },
    "0x0a9c": {
      "args": 2,
      "format": "%2d% = file %1d% size",
      "desc": "Gets the file size in bytes"
    },
    "0x0a9d": {
      "args": 3,
      "format": "read_file %1d% size %2d% to %3d%",
      "desc": "Reads the specified number of bytes from the opened file and writes them to the memory region starting from the address of the destination variable"
    },
    "0x0a9e": {
      "args": 3,
      "format": "write_file %1d% size %2d% from %3d%",
      "desc": "Copies the specified number of bytes of the memory region starting from the address of the source variable to the file"
    },
    "0x0a9f": {
      "args": 1,
      "format": "%1d% = get_this_script_struct",
      "desc": "Gets the address of the current script structure in the game memory"
    },
    "0x0aa0": {
      "args": [
        "address"
      ],
      "format": "gosub_if_false %1p%",
      "desc": "Transfers the script execution to the label as a subroutine if the result of the condition is false"
    },
    "0x0aa1": {
      "format": "return_if_false",
      "desc": "Returns from the current subroutine if the result of the condition is false"
    },
    "0x0aa2": {
      "args": [
        "string",
        "int"
      ],
      "format": "%2h% = load_dynamic_library %1s%",
      "comment": "IF and SET"
    },
    "0x0aa3": {
      "args": [
        "int"
      ],
      "format": "free_dynamic_library %1h%"
    },
    "0x0aa4": {
      "args": [
        "string",
        "any",
        "any"
      ],
      "format": "%3d% = get_dynamic_library_procedure %1s% library %2d%",
      "comment": "IF and SET"
    },
    "0x0aa5": {
      "format": "call_function %1d% num_params %2h% pop %3h%",
      "desc": "Calls a function at the address with the given arguments and the calling convention defined by the pop parameter where 0 means 'stdcall' and a value equal to numParams means  'cdecl'"
    },
    "0x0aa6": {
      "format": "call_method %1d% struct %2d% num_params %3h% pop %4h%",
      "desc": "Calls a method of the object (struct) with the given arguments and the 'thiscall' calling convention (pop is always 0)"
    },
    "0x0aa7": {
      "format": "call_function_return %1d% num_params %2h% pop %3h%",
      "desc": "Calls a function similarly to 0AA5 and writes the result into the variable following the arguments list"
    },
    "0x0aa8": {
      "format": "call_method_return %1d% struct %2d% num_params %3h% pop %4h%",
      "desc": "Calls a method of the object (struct) similarly to 0AA6 and writes the result into the variable following the arguments list"
    },
    "0x0aa9": {
      "flags": [
        "condition"
      ],
      "format": "  is_game_version_original",
      "desc": "Returns true if the game version is vanilla 1.0"
    },
    "0x0aaa": {
      "args": [
        "string",
        "any"
      ],
      "format": "%2d% = get_script_struct_named %1s%",
      "desc": "Gets the address of a running script which name matches the given string or 0 otherwise"
    },
    "0x0aab": {
      "args": [
        "string"
      ],
      "flags": [
        "condition"
      ],
      "format": "  does_file_exist %1s%",
      "desc": "Returns true if a file at the given path exists"
    },
    "0x0aac": {
      "args": 2,
      "format": "%2d% = load_audio_stream %1d%"
    },
    "0x0aad": {
      "args": 2,
      "format": "set_audio_stream %1d% state %2d%"
    },
    "0x0aae": {
      "args": 1,
      "format": "remove_audio_stream %1d%"
    },
    "0x0aaf": {
      "args": 2,
      "format": "%2d% = get_audio_stream_length %1d%",
      "desc": "Gets the audio stream length in seconds"
    },
    "0x0ab0": {
      "args": 1,
      "flags": [
        "condition"
      ],
      "format": "  is_key_pressed %1d%",
      "desc": "Returns true if the player is pressing a keyboard button with the specified code"
    },
    "0x0ab1": {
      "format": "cleo_call %1p%"
    },
    "0x0ab2": {
      "format": "cleo_return %1d%"
    },
    "0x0ab3": {
      "args": 2,
      "format": "cleo_shared_var %1d% = %2d%"
    },
    "0x0ab4": {
      "args": 2,
      "format": "%2d% = cleo_shared_var %1d%"
    },
    "0x0ab5": {
      "args": 3,
      "format": "store_char %1d% closest_vehicle_to %2d% closest_ped_to %3d%",
      "desc": "Stores the handles of a ped and vehicle being closest to the char or -1 otherwise"
    },
    "0x0ab6": {
      "args": 3,
      "format": "get_target_blip_coords_to %1d% %2d% %3d%",
      "desc": "Gets the coordinates of the location targeted in the game map",
      "comment": "IF and SET"
    },
    "0x0ab7": {
      "args": 2,
      "format": "get_car %1d% number_of_gears_to %2d%",
      "desc": "Gets the total number of gears of the vehicle and stores it to the variable"
    },
    "0x0ab8": {
      "args": 2,
      "format": "get_car %1d% current_gear_to %2d%",
      "desc": "Returns the current gear of the vehicle"
    },
    "0x0ab9": {
      "args": 2,
      "format": "get_audio_stream %1d% state_to %2d%"
    },
    "0x0aba": {
      "args": [
        "string"
      ],
      "format": "terminate_all_custom_scripts_with_this_name %1s%",
      "desc": "Ends the custom CLEO scripts with the specified name, freeing game memory"
    },
    "0x0abb": {
      "args": 2,
      "format": "%2d% = audio_stream %1d% volume"
    },
    "0x0abc": {
      "args": 2,
      "format": "set_audio_stream %1d% volume %2d%"
    },
    "0x0abd": {
      "args": 1,
      "flags": [
        "condition"
      ],
      "format": "  car %1d% siren_on"
    },
    "0x0abe": {
      "args": 1,
      "flags": [
        "condition"
      ],
      "format": "  car %1d% engine_on"
    },
    "0x0abf": {
      "args": 2,
      "format": "set_car %1d% engine_state_to %2d%"
    },
    "0x0ac0": {
      "args": 2,
      "format": "set_audio_stream %1d% looped %2d%"
    },
    "0x0ac1": {
      "args": 2,
      "format": "%2d% = load_audio_stream_with_3d_support %1d%",
      "comment": "IF and SET"
    },
    "0x0ac2": {
      "args": 4,
      "format": "link_3d_audio_stream %1d% at_coords %2d% %3d% %4d%"
    },
    "0x0ac3": {
      "args": 2,
      "format": "link_3d_audio_stream %1d% to_object %2d%"
    },
    "0x0ac4": {
      "args": 2,
      "format": "link_3d_audio_stream %1d% to_actor %2d%"
    },
    "0x0ac5": {
      "args": 2,
      "format": "link_3d_audio_stream %1d% to_car %2d%"
    },
    "0x0ac6": {
      "args": [
        "address",
        "any"
      ],
      "format": "%2d% = label %1p% pointer",
      "desc": "Stores the absolute address of a code location marked with the label"
    },
    "0x0ac7": {
      "args": 2,
      "format": "%2d% = var %1d% pointer",
      "desc": "Stores the absolute address of the variable"
    },
    "0x0ac8": {
      "args": 2,
      "format": "%2d% = allocate_memory_size %1d%",
      "desc": "Allocates a chunk of memory of the given size and stores its address to the variable"
    },
    "0x0ac9": {
      "args": 1,
      "format": "free_allocated_memory %1d%",
      "desc": "Frees the memory allocated with 0AC8"
    },
    "0x0aca": {
      "args": [
        "string"
      ],
      "format": "show_text_box %1s%"
    },
    "0x0acb": {
      "args": [
        "string",
        "any",
        "any"
      ],
      "format": "show_styled_text %1s% time %2d% style %3d%"
    },
    "0x0acc": {
      "args": [
        "string",
        "any"
      ],
      "format": "show_text_lowpriority %1s% time %2d%",
      "desc": "Displays the text (provided as a string literal or an address) similarly to 00BB"
    },
    "0x0acd": {
      "args": [
        "string",
        "any"
      ],
      "format": "show_text_highpriority %1s% time %2d%"
    },
    "0x0ace": {
      "format": "show_formatted_text_box %1s%",
      "desc": "Displays a black text box for a few seconds respecting the format of the String entered"
    },
    "0x0acf": {
      "format": "show_formatted_styled_text %1s% time %2d% style %3d%",
      "desc": "Displays a styled message for the specified time respecting the format of the String entered"
    },
    "0x0ad0": {
      "format": "show_formatted_text_lowpriority %1s% time %2s%"
    },
    "0x0ad1": {
      "format": "show_formatted_text_highpriority %1s% time %2s%"
    },
    "0x0ad2": {
      "args": 2,
      "format": "%2d% = player %1d% targeted_actor",
      "comment": "IF and SET"
    },
    "0x0ad3": {
      "format": "%1d% = string_format %2s%"
    },
    "0x0ad4": {
      "format": "%3d% = scan_string %1d% format %2s%"
    },
    "0x0ad5": {
      "args": 3,
      "format": "file %1d% seek %2d% from_origin %3d%",
      "desc": "Sets the position of the file to the given offset from the origin",
      "comment": "IF and SET"
    },
    "0x0ad6": {
      "args": 1,
      "flags": [
        "condition"
      ],
      "format": "  is_end_of_file_reached %1d%",
      "desc": "Returns true if the end of the specified file has been reached"
    },
    "0x0ad7": {
      "args": 3,
      "format": "read_string_from_file %1d% to %2d% size %3d%",
      "desc": "Reads data from the file into the buffer until either the end of buffer is reached, the newline character is read, or the end-of-file is reached, whichever comes first",
      "comment": "IF and SET"
    },
    "0x0ad8": {
      "args": 2,
      "format": "write_string_to_file %1d% from %2d%",
      "desc": "Copies data from the source string to the file up to but not including the null character",
      "comment": "IF and SET"
    },
    "0x0ad9": {
      "format": "write_formatted_text %2d% to_file %1d%",
      "desc": "Writes a formatted string to the file"
    },
    "0x0ada": {
      "format": "%3d% = scan_file %1d% format %2d%",
      "comment": "IF and SET"
    },
    "0x0adb": {
      "args": [
        "model",
        "any"
      ],
      "format": "%2d% = vehicle_model %1o% name"
    },
    "0x0adc": {
      "args": 1,
      "flags": [
        "condition"
      ],
      "format": "  test_cheat %1d%",
      "desc": "Returns true if the specified string of letters has been typed on the keyboard"
    },
    "0x0add": {
      "args": [
        "model"
      ],
      "format": "spawn_car_with_model %1o% like_a_cheat",
      "desc": "Creates a vehicle with the model (no pre-loading needed) in front of the player"
    },
    "0x0ade": {
      "args": 2,
      "format": "%2d% = text_label_string %1d%"
    },
    "0x0adf": {
      "args": 2,
      "format": "add_text_label %1d% text %2d%"
    },
    "0x0ae0": {
      "args": 1,
      "format": "remove_text_label %1d%"
    },
    "0x0ae1": {
      "args": [
        "any",
        "any",
        "any",
        "any",
        "int",
        "int",
        "any"
      ],
      "format": "%7d% = random_char_near_point %1d% %2d% %3d% in_radius %4d% find_next %5h% pass_deads %6h%",
      "comment": "IF and SET"
    },
    "0x0ae2": {
      "args": [
        "any",
        "any",
        "any",
        "any",
        "int",
        "int",
        "any"
      ],
      "format": "%7d% = random_vehicle_near_point %1d% %2d% %3d% in_radius %4d% find_next %5h% pass_wrecked %6h%",
      "comment": "IF and SET"
    },
    "0x0ae3": {
      "args": [
        "any",
        "any",
        "any",
        "any",
        "int",
        "any"
      ],
      "format": "%6d% = random_object_near_point %1d% %2d% %3d% in_radius %4d% find_next %5h%",
      "comment": "IF and SET"
    },
    "0x0ae4": {
      "args": 1,
      "flags": [
        "condition"
      ],
      "format": "  does_directory_exist %1d%",
      "desc": "Returns true if a directory at the given path exists"
    },
    "0x0ae5": {
      "args": 1,
      "format": "create_directory %1d%",
      "desc": "Creates a directory at the given path",
      "comment": "IF and SET"
    },
    "0x0ae6": {
      "args": 3,
      "format": "%2d% = find_first_file %1d% get_filename_to %3d%",
      "comment": "IF and SET"
    },
    "0x0ae7": {
      "args": 2,
      "format": "%2d% = find_next_file %1d%",
      "comment": "IF and SET"
    },
    "0x0ae8": {
      "args": 1,
      "format": "find_close %1d%"
    },
    "0x0ae9": {
      "args": 1,
      "format": "pop_float %1d%"
    },
    "0x0aea": {
      "args": 2,
      "format": "%2d% = ped_struct %1d% handle",
      "desc": "Gets the corresponding handle of the char located at the given address in memory"
    },
    "0x0aeb": {
      "args": 2,
      "format": "%2d% = vehicle_struct %1d% handle",
      "desc": "Gets the corresponding handle of the vehicle located at the given address in memory"
    },
    "0x0aec": {
      "args": 2,
      "format": "%2d% = object_struct %1d% handle",
      "desc": "Gets the corresponding handle of the object located at the given address in memory"
    },
    "0x0aed": {
      "args": 3,
      "format": "%3d% = float %1d% to_string_format %2d%"
    },
    "0x0aee": {
      "args": 3,
      "format": "%3d% = pow %1d% base %2d%",
      "desc": "Returns the specified number raised to the specified power",
      "comment": "all floats"
    },
    "0x0aef": {
      "args": 3,
      "format": "%3d% = log %1d% base %2d%",
      "desc": "Returns the logarithm of the specified number in the specified base",
      "comment": "all floats"
    },
    "0x0af0": {
      "args": [
        "string",
        "string",
        "string",
        "any"
      ],
      "format": "%4d% = read_int_from_ini_file %1s% section %2s% key %3s%",
      "desc": "Reads an integer value from the ini file"
    },
    "0x0af1": {
      "args": [
        "any",
        "string",
        "string",
        "string"
      ],
      "format": "write_int %1d% to_ini_file %2s% section %3s% key %4s%",
      "desc": "Writes the integer value to the ini file"
    },
    "0x0af2": {
      "args": [
        "string",
        "string",
        "string",
        "any"
      ],
      "format": "%4d% = read_float_from_ini_file %1s% section %2s% key %3s%",
      "desc": "Reads a floating-point value from the ini file"
    },
    "0x0af3": {
      "args": [
        "any",
        "string",
        "string",
        "string"
      ],
      "format": "write_float %1d% to_ini_file %2s% section %3s% key %4s%",
      "desc": "Writes the floating-point value to the ini file"
    },
    "0x0af4": {
      "args": [
        "string",
        "string",
        "string",
        "any"
      ],
      "format": "%4d% = read_string_from_ini_file %1s% section %2s% key %3s%",
      "desc": "Reads a string value from the ini file"
    },
    "0x0af5": {
      "args": [
        "string",
        "string",
        "string",
        "string"
      ],
      "format": "write_string %1s% to_ini_file %2s% section %3s% key %4s%",
      "desc": "Writes the string value to the ini file"
    },
    "0x0b00": {
      "args": 1,
      "format": "delete_file %1d%",
      "desc": "Deletes a file at the given path and returns true if the operation is successful",
      "comment": "IF and SET"
    },
    "0x0b01": {
      "args": 2,
      "format": "delete_directory %1d% with_all_files_and_subdirectories %2d%",
      "desc": "Deletes a directory at the given path and returns true if the operation is successful",
      "comment": "IF and SET"
    },
    "0x0b02": {
      "args": 2,
      "format": "move_file %1d% to %2d%",
      "desc": "Moves an existing file and returns true if the operation is successful",
      "comment": "IF and SET"
    },
    "0x0b03": {
      "args": 2,
      "format": "move_directory %1d% to %2d%",
      "desc": "Moves an existing directory and returns true if the operation is successful",
      "comment": "IF and SET"
    },
    "0x0b04": {
      "args": 2,
      "format": "copy_file %1d% to %2d%",
      "desc": "Copies an existing file to a new file and returns true if the operation is successful",
      "comment": "IF and SET"
    },
    "0x0b05": {
      "args": 2,
      "format": "copy_directory %1d% to %2d%",
      "desc": "Copies an existing directory to a new directory and returns true if the operation is successful",
      "comment": "IF and SET"
    },
    "0x0b10": {
      "args": 3,
      "format": "%3d% = %1d% AND %2d%"
    },
    "0x0b11": {
      "args": 3,
      "format": "%3d% = %1d% OR %2d%"
    },
    "0x0b12": {
      "args": 3,
      "format": "%3d% = %1d% XOR %2d%"
    },
    "0x0b13": {
      "args": 2,
      "format": "%2d% = NOT %1d%"
    },
    "0x0b14": {
      "args": 3,
      "format": "%3d% = %1d% MOD %2d%"
    },
    "0x0b15": {
      "args": 3,
      "format": "%3d% = %1d% SHR %2d%"
    },
    "0x0b16": {
      "args": 3,
      "format": "%3d% = %1d% SHL %2d%"
    },
    "0x0b17": {
      "args": 2,
      "format": "%1d% &= %2d%"
    },
    "0x0b18": {
      "args": 2,
      "format": "%1d% |= %2d%"
    },
    "0x0b19": {
      "args": 2,
      "format": "%1d% ^= %2d%"
    },
    "0x0b1a": {
      "args": 1,
      "format": "~ %1d%"
    },
    "0x0b1b": {
      "args": 2,
      "format": "%1d% %= %2d%"
    },
    "0x0b1c": {
      "args": 2,
      "format": "%1d% >>= %2d%"
    },
    "0x0b1d": {
      "args": 2,
      "format": "%1d% <<= %2d%"
    },
    "0x0b20": {
      "args": 2,
      "format": "read_clipboard_data %1d% size %2d%"
    },
    "0x0b21": {
      "args": 2,
      "format": "write_clipboard_data %1d% size %2d%"
    },
    "0x0d00": {
      "args": 3,
      "format": "matrix %3d% = matrix %1d% * matrix %2d%"
    },
    "0x0d01": {
      "args": 6,
      "format": "rotate_matrix %1d% on_axis %2d% %3d% %4d% angle %5d% combine_op %6d%"
    },
    "0x0d02": {
      "args": 2,
      "format": "%2d% = matrix %1d% x_angle"
    },
    "0x0d03": {
      "args": 2,
      "format": "%2d% = matrix %1d% y_angle"
    },
    "0x0d04": {
      "args": 2,
      "format": "%2d% = matrix %1d% z_angle"
    },
    "0x0d05": {
      "args": 4,
      "format": "set_matrix %1d% position %2d% %3d% %4d%"
    },
    "0x0d06": {
      "args": 4,
      "format": "get_matrix %1d% position_to %2d% %3d% %4d%"
    },
    "0x0d07": {
      "args": 7,
      "format": "get_coords %1d% %2d% %3d% offsets_relative_to_matrix %4d% store_to %5d% %6d% %7d%"
    },
    "0x0d08": {
      "args": 4,
      "format": "set_matrix %1d% angles_XYZ %2d% %3d% %4d%"
    },
    "0x0d09": {
      "args": 2,
      "format": "copy_matrix %1d% to %2d%"
    },
    "0x0d0a": {
      "args": 7,
      "format": "store_coords_to %5d% %6d% %7d% from_matrix %1d% with_offsets %2d% %3d% %4d%"
    },
    "0x0d0b": {
      "args": 3,
      "format": "get_actor %1d% bone %2d% matrix_to %3d%",
      "comment": "IF and SET"
    },
    "0x0d0c": {
      "args": [
        "any",
        "string",
        "any"
      ],
      "format": "get_car %1d% component %2s% matrix_to %3d%",
      "comment": "IF and SET"
    },
    "0x0d0d": {
      "args": [
        "any",
        "string",
        "any"
      ],
      "format": "%3d% = get_car %1d% component %2s%",
      "comment": "IF and SET"
    },
    "0x0d0e": {
      "args": [
        "any",
        "string",
        "any"
      ],
      "format": "set_car %1d% component %2s% state %3d%",
      "comment": "IF and SET"
    },
    "0x0d0f": {
      "args": 2,
      "format": "set_car %1d% model_alpha %2d%",
      "comment": "IF and SET"
    },
    "0x0d10": {
      "args": 2,
      "format": "set_actor %1d% model_alpha %2d%",
      "comment": "IF and SET"
    },
    "0x0d11": {
      "args": 2,
      "format": "set_object %1d% model_alpha %2d%",
      "comment": "IF and SET"
    },
    "0x0d12": {
      "args": [
        "any",
        "string",
        "any"
      ],
      "format": "set_car %1d% component %2s% alpha %3d%",
      "comment": "IF and SET"
    },
    "0x0d13": {
      "args": 2,
      "format": "set_matrix %1d% x_angle %2d%"
    },
    "0x0d14": {
      "args": 2,
      "format": "set_matrix %1d% y_angle %2d%"
    },
    "0x0d15": {
      "args": 2,
      "format": "set_matrix %1d% z_angle %2d%"
    },
    "0x0d16": {
      "args": 2,
      "format": "set_matrix %1d% rotation_from_quat %2d%"
    },
    "0x0d17": {
      "args": 2,
      "format": "convert_matrix %1d% to_quat %2d%"
    },
    "0x0d18": {
      "args": 6,
      "format": "rotate_quat %1d% axis_vector %2d% %3d% %4d% angle %5d% flag %6d%"
    },
    "0x0d19": {
      "args": 2,
      "format": "get_normalized_quat %1d% to_quat %2d%"
    },
    "0x0d1a": {
      "args": 3,
      "format": "quat %3d% = quat %1d% * quat %2d%"
    },
    "0x0d1b": {
      "args": 3,
      "format": "get_entity %1d% type_to %2d% class_to %3d%"
    },
    "0x0d1c": {
      "args": 1,
      "format": "normalize_vector %1d%"
    },
    "0x0d1d": {
      "args": 4,
      "format": "matrix_slerp %1d% %2d% %3d% %4d%"
    },
    "0x0d1e": {
      "args": 4,
      "format": "quat_slerp %1d% %2d% %3d% %4d%"
    },
    "0x0d1f": {
      "args": 2,
      "format": "%2d% = component %1d% child"
    },
    "0x0d20": {
      "args": 2,
      "format": "%2d% = component %1d% next_component"
    },
    "0x0d21": {
      "args": [
        "any",
        "string"
      ],
      "format": "%2s% = component %1d% name"
    },
    "0x0d22": {
      "args": 2,
      "format": "%2d% = component %1d% ltm"
    },
    "0x0d23": {
      "args": 2,
      "format": "%2d% = component %1d% modelling_matrix"
    },
    "0x0d24": {
      "args": 5,
      "format": "set_quat %1d% elements %2d% %3d% %4d% %5d%"
    },
    "0x0d25": {
      "args": 17,
      "format": "set_matrix %1d% elements %2d% %3d% %4d% %5d% %6d% %7d% %8d% %9d% %10d% %11d% %12d% %13d% %14d% %15d% %16d% %17d%"
    },
    "0x0d26": {
      "args": 4,
      "format": "set_vector %1d% elements %2d% %3d% %4d%"
    },
    "0x0d27": {
      "args": 3,
      "format": "copy_memory_from %1d% to %2d% size %3d%"
    },
    "0x0d28": {
      "args": 4,
      "format": "get_vector %1d% elements_to %2d% %3d% %4d%"
    },
    "0x0d29": {
      "args": 5,
      "format": "get_quat %1d% elements_to %2d% %3d% %4d% %5d%"
    },
    "0x0d2a": {
      "args": 2,
      "format": "%2d% = get_car %1d% number_of_collided_entites"
    },
    "0x0d2b": {
      "args": 2,
      "format": "%2d% = get_actor %1d% number_of_collided_entites"
    },
    "0x0d2c": {
      "args": 2,
      "format": "%2d% = get_object %1d% number_of_collided_entites"
    },
    "0x0d2d": {
      "args": 8,
      "format": "get_local_time_year_to %1d% month_to %2d% day_of_week_to %3d% day_to %4d% hour_to %5d% minute_to %6d% second_to %7d% milliseconds_to %8d%"
    },
    "0x0d2e": {
      "args": 3,
      "format": "set_script %1d% var %2d% to %3d%"
    },
    "0x0d2f": {
      "args": 3,
      "format": "%3d% = get_script %1d% var %2d%"
    },
    "0x0d30": {
      "args": 3,
      "format": "%3d% = actor %1d% bone %2d%",
      "comment": "IF and SET"
    },
    "0x0d31": {
      "args": 2,
      "format": "%2d% = bone %1d% offset_vector"
    },
    "0x0d32": {
      "args": 2,
      "format": "%2d% = bone %1d% quat"
    },
    "0x0d33": {
      "args": 3,
      "format": "set_car %1d% door %2d% window_state %3d%"
    },
    "0x0d34": {
      "args": 7,
      "format": "store_car %1d% collided_entities_to %2d% %3d% %4d% %5d% %6d% %7d%"
    },
    "0x0d35": {
      "args": 7,
      "format": "store_actor %1d% collided_entities_to %2d% %3d% %4d% %5d% %6d% %7d%"
    },
    "0x0d36": {
      "args": 7,
      "format": "store_object %1d% collided_entities_to %2d% %3d% %4d% %5d% %6d% %7d%"
    },
    "0x0d37": {
      "args": 3,
      "format": "struct %1d% param %2d% = %3d%"
    },
    "0x0d38": {
      "args": 3,
      "format": "%3d% = struct %1d% param %2d%"
    },
    "0x0d39": {
      "args": 2,
      "format": "%2d% = actor %1d% max_health"
    },
    "0x0d3a": {
      "args": 20,
      "format": "get_collision_between_points %1d% %2d% %3d% and %4d% %5d% %6d% flags %7d% %8d% %9d% %10d% %11d% %12d% %13d% %14d% ignore_entity %15d% store_point_to %17d% %18d% %19d% entity_to %20d% colpoint_data_to %16d%",
      "comment": "IF and SET"
    },
    "0x0d3b": {
      "args": 4,
      "format": "get_colpoint_data %1d% normal_XYZ_to %2d% %3d% %4d%"
    },
    "0x0d3c": {
      "args": 2,
      "format": "get_colpoint_data %1d% surface_to %2d%"
    },
    "0x0d3d": {
      "args": 2,
      "format": "get_colpoint_data %1d% lighting_to %2d%"
    },
    "0x0d3e": {
      "args": 2,
      "format": "get_colpoint_data %1d% depth_to %2d%"
    },
    "0x0d3f": {
      "args": 10,
      "format": "find_intersrction_between_circles %1d% %2d% %3d% and %4d% %5d% %6d% store_point1_to %7d% %8d% point2_to %9d% %10d%",
      "comment": "IF and SET"
    },
    "0x0d40": {
      "args": 8,
      "format": "draw_2d_shape_type %3d% texture %4d% numVerts %2d% pVerts %1d% vertexAlpha %5d% srcBlend %6d% dstBlend %7d% priority %8d%",
      "comment": "IF and SET"
    },
    "0x0d41": {
      "args": 14,
      "format": "set_vertices %1d% vertex %2d% xyz %5d% %6d% %7d% rhw %8d% RGBA %9d% %10d% %11d% %12d% uv %13d% %14d% invertX %3d% invertY %4d%"
    },
    "0x0d42": {
      "args": [
        "string",
        "string"
      ],
      "format": "load_txd %1s% from %2s%",
      "comment": "IF and SET"
    },
    "0x0d43": {
      "args": [
        "string",
        "any"
      ],
      "format": "%2d% = txd %1s% id"
    },
    "0x0d44": {
      "args": [
        "string",
        "string",
        "any"
      ],
      "format": "%3d% = find_texture %1s% in_dictionary_named %2s%",
      "comment": "IF and SET"
    },
    "0x0d45": {
      "args": 5,
      "format": "rotate_2d_vertices_shape %1d% num_verts %2d% aroundXY %3d% %4d% angle %5d%"
    },
    "0x0d46": {
      "args": [
        "string",
        "any",
        "any"
      ],
      "format": "%3d% = find_texture %1s% in_dictionary_with_id %2d%",
      "comment": "IF and SET"
    },
    "0x0d47": {
      "args": 2,
      "format": "%2d% = model %1d% txd_id",
      "comment": "IF and SET"
    },
    "0x0d48": {
      "args": 2,
      "format": "%2d% = model %1d% crc32_key",
      "comment": "IF and SET"
    },
    "0x0d49": {
      "args": [
        "string",
        "string",
        "any"
      ],
      "format": " %3d% = compare_strings %1s% %2s%",
      "comment": "IF and SET"
    },
    "0x0d4a": {
      "args": [
        "any",
        "string"
      ],
      "format": "concatenate_strings %1d% %2s%"
    },
    "0x0d4b": {
      "args": [
        "any",
        "string",
        "any"
      ],
      "format": " %3d% = locate_substring %1d% %2s%",
      "comment": "IF and SET"
    },
    "0x0d4c": {
      "args": [
        "string",
        "any"
      ],
      "format": "%2d% = string %1s% length"
    },
    "0x0d4d": {
      "args": [
        "string",
        "string"
      ],
      "format": "copy_string %1s% to %2s%"
    },
    "0x0d4e": {
      "args": 4,
      "format": "%4d% = struct %1d% offset %2d% size %3d%"
    },
    "0x0d4f": {
      "args": 4,
      "format": "struct %1d% offset %2d% size %3d% = %4d%"
    },
    "0x0d50": {
      "args": 14,
      "format": "draw_shadow_type %1d% position %2d% %3d% %4d% width %5d% height %6d% rotation %7d% distance %8d% texture %9d% intensity %10d% RGB %11d% %12d% %13d% shadow_data %14d%"
    },
    "0x0d51": {
      "args": 14,
      "format": "draw_permanent_shadow_type %1d% position %2d% %3d% %4d% width %5d% height %6d% rotation %7d% distance %8d% texture %9d% intensity %10d% RGB %11d% %12d% %13d% time %14d%"
    },
    "0x0d52": {
      "args": 12,
      "format": "draw_light_type %1d% position %2d% %3d% %4d% direction %5d% %6d% %7d% radius %8d% RGBA %9d% %10d% %11d% affect_entity %12d%"
    },
    "0x0d53": {
      "args": 10,
      "format": "draw_corona_with_texture %1d% color %2d% %3d% %4d% %5d% on_entity %6d% at %7d% %8d% %9d% size %10d%"
    },
    "0x0d54": {
      "args": 18,
      "format": "draw_corona_with_extra_params_texture %1d% color %2d% %3d% %4d% %5d% on_entity %6d% at %7d% %8d% %9d% size %10d% far_clip %11d% near_clip %12d% flare %13d% enable_reflection %14d% check_obstacles %15d% flash_while_fading %16d% fade_speed %17d% only_from_below %18d%"
    },
    "0x0d55": {
      "args": 6,
      "format": "get_sun_colors_core_to %1d% %2d% %3d% glow_to %4d% %5d% %6d%"
    },
    "0x0d56": {
      "args": 2,
      "format": "get_sun_screen_coords_XY_to %1d% %2d%"
    },
    "0x0d57": {
      "args": 3,
      "format": "get_sun_position_to %1d% %2d% %3d%",
      "comment": "IF and SET"
    },
    "0x0d58": {
      "args": 2,
      "format": "get_sun_size_core_to %1d% glow_to %2d%"
    },
    "0x0d59": {
      "args": 1,
      "format": "%1d% = current_weather"
    },
    "0x0d5a": {
      "args": 2,
      "format": "get_trafficlights_type_NS_current_color_to %1d% type_WE_current_color_to %2d%"
    },
    "0x0d5b": {
      "args": 12,
      "format": "draw_spotlight_from %1d% %2d% %3d% to %4d% %5d% %6d% base_radius %7d% target_radius %8d% enable_shadow %9d% shadow_intensity %10d% flag1 %11d% flag2 %12d%"
    },
    "0x0d5c": {
      "args": 3,
      "format": "%3d% = get_car %1d% light %2d% damage_state"
    },
    "0x0d5d": {
      "args": 3,
      "format": "set_car %1d% light %2d% damage_state %3d%"
    },
    "0x0d5e": {
      "args": 3,
      "format": "get_vehicle %1d% class_to %2d% subclass_to %3d%"
    },
    "0x0d5f": {
      "args": 7,
      "format": "get_vehicle %1d% dummy_element %2d% position %3d% to %5d% %6d% %7d% invert_x %4d%",
      "comment": "IF and SET"
    },
    "0x0d60": {
      "args": 10,
      "format": "create_projectile_type %1d% launched_from_entity %2d% origin %3d% %4d% %5d% target %6d% %7d% %8d% target_entity %9d% force %10d%"
    },
    "0x0d61": {
      "args": [
        "string",
        "string",
        "any"
      ],
      "format": " %3d% = load_texture_bmp_from %1s% with_mask %2s%",
      "comment": "IF and SET"
    },
    "0x0d64": {
      "args": [
        "string",
        "any"
      ],
      "format": " %2d% = load_texture_png_from %1s%",
      "comment": "IF and SET"
    },
    "0x0d65": {
      "args": [
        "string",
        "any",
        "any",
        "any",
        "any",
        "any"
      ],
      "format": "print %1s% at %2d% %3d% scale %4d% %5d% style %6d%"
    },
    "0x0d66": {
      "args": [
        "string",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any"
      ],
      "format": "print %1s% at %2d% %3d% scale %4d% %5d% style %6d% prop %7d% align %8d% wrap %9d% justify %10d% color %11d% %12d% %13d% %14d% outline %15d% shadow %16d% dropColor %17d% %18d% %19d% %20d% background %21d% backColor %22d% %23d% %24d% %25d%"
    },
    "0x0d72": {
      "args": 3,
      "format": "get_sfx_volume_to %2d% radio_volume_to %3d% type %1d%"
    },
    "0x0d73": {
      "args": 3,
      "format": "get_screen_width_to %2d% height_to %3d% type %1d%"
    },
    "0x0d74": {
      "args": 2,
      "format": "%2d% = component %1d% parent_component"
    },
    "0x0d75": {
      "args": 2,
      "format": "%2d% = component %1d% num_objects"
    },
    "0x0d76": {
      "args": 3,
      "format": "%3d% = component %1d% object %2d%"
    },
    "0x0d77": {
      "args": 2,
      "format": "object_atomic %1d% hide %2d%"
    },
    "0x0d78": {
      "args": 3,
      "format": "%3d% = get_object %1d% atomic_flag %2d%"
    },
    "0x0d79": {
      "args": 3,
      "format": "set_object %1d% atomic_flag %2d% state %3d%"
    },
    "0x0d7a": {
      "args": 2,
      "format": "%2d% = get_object %1d% num_materials"
    },
    "0x0d7b": {
      "args": 3,
      "format": "%3d% = get_object %1d% material %2d% texture"
    },
    "0x0d7c": {
      "args": [
        "string",
        "any"
      ],
      "format": " %2d% = load_texture_dds_from %1s%",
      "comment": "IF and SET"
    },
    "0x0d7d": {
      "args": 1,
      "format": "clean_loaded_texture %1d%"
    },
    "0x0d7e": {
      "args": 10,
      "format": "draw_sprite_with_texture %1d% at_cornerA %2d% %3d% cornerB %4d% %5d% color %6d% %7d% %8d% %9d% angle %10d%"
    },
    "0x0d7f": {
      "args": 22,
      "format": "draw_gradient_sprite_with_texture %1d% at_cornerA %2d% %3d% cornerB %4d% %5d% colors %6d% %7d% %8d% %9d%  %10d% %11d% %12d% %13d%  %14d% %15d% %16d% %17d%  %18d% %19d% %20d% %21d% angle %22d%"
    },
    "0x0e00": {
      "args": 2,
      "format": "get_car_alarm %1d% mode_to %2d%"
    },
    "0x0e01": {
      "args": [
        "model",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any"
      ],
      "format": "create_object_no_save %1o% at %2d% %3d% %4d% offset %5d% ground %6d% to %7d%"
    },
    "0x0e02": {
      "args": 1,
      "format": "set_car_generator %1d% no_save"
    },
    "0x0e03": {
      "args": 2,
      "format": "perlin_noise %1d% store_to %2d%"
    },
    "0x0e04": {
      "args": 1,
      "format": "get_next_weather_to %1d%"
    },
    "0x0e05": {
      "args": 1,
      "format": "set_next_weather_to %1d%"
    },
    "0x0e06": {
      "args": 1,
      "format": "get_rain_intensity %1d%"
    },
    "0x0e07": {
      "args": 1,
      "format": "set_rain_intensity %1d%"
    },
    "0x0e08": {
      "args": 1,
      "format": "is_car_script_controlled %1d%"
    },
    "0x0e09": {
      "args": 1,
      "format": "mark_car_as_needed %1d%"
    },
    "0x0e0a": {
      "args": 1,
      "format": "is_char_script_controlled %1d%"
    },
    "0x0e0b": {
      "args": 1,
      "format": "mark_char_as_needed %1d%"
    },
    "0x0e0c": {
      "args": 1,
      "format": "is_object_script_controlled %1d%"
    },
    "0x0e0d": {
      "args": 1,
      "format": "mark_object_as_needed %1d%"
    },
    "0x0e0e": {
      "args": 2,
      "format": "get_current_resolution_to %1d% %2d%"
    },
    "0x0e0f": {
      "args": 4,
      "format": "get_fixed_xy_aspect_ratio %1d% %2d% to %3d% %4d%"
    },
    "0x0e10": {
      "format": "is_mouse_wheel_up"
    },
    "0x0e11": {
      "format": "is_mouse_wheel_down"
    },
    "0x0e12": {
      "args": 2,
      "format": "get_vehicle %1d% subclass_to %2d%"
    },
    "0x0e13": {
      "args": 2,
      "format": "get_entity %1d% type_to %2d%"
    },
    "0x0e14": {
      "args": 3,
      "format": "init_extended_char_vars %1d% id %2d% new_vars %3d%"
    },
    "0x0e15": {
      "args": 4,
      "format": "set_extended_char_var %1d% id %2d% var %3d% value %4d%"
    },
    "0x0e16": {
      "args": 4,
      "format": "get_extended_char_var %1d% id %2d% var %3d% to %4d%"
    },
    "0x0e17": {
      "args": 3,
      "format": "init_extended_car_vars %1d% id %2d% new_vars %3d%"
    },
    "0x0e18": {
      "args": 4,
      "format": "set_extended_car_var %1d% id %2d% var %3d% value %4d%"
    },
    "0x0e19": {
      "args": 4,
      "format": "get_extended_car_var %1d% id %2d% var %3d% to %4d%"
    },
    "0x0e1a": {
      "args": 3,
      "format": "init_extended_object_vars %1d% id %2d% new_vars %3d%"
    },
    "0x0e1b": {
      "args": 4,
      "format": "set_extended_object_var %1d% id %2d% var %3d% value %4d%"
    },
    "0x0e1c": {
      "args": 4,
      "format": "get_extended_object_var %1d% id %2d% var %3d% to %4d%"
    },
    "0x0e1d": {
      "format": "is_on_mission"
    },
    "0x0e1e": {
      "args": 15,
      "format": "draw_texture_plus %1d% event %2d% pos %3d% %4d% size %5d% %6d% angle %7d% depth %8d% fix_aspect_ratio %9d% maskTrisCount %10d% maskTrisArray %11d% rgba %12d% %13d% %14d% %15d%"
    },
    "0x0e1f": {
      "args": 4,
      "format": "ease %1d% mode %2d% way %3d% to %4d%"
    },
    "0x0e20": {
      "format": "is_on_samp"
    },
    "0x0e21": {
      "args": 1,
      "format": "get_audio_sfx_volume %1d%"
    },
    "0x0e22": {
      "args": 1,
      "format": "get_audio_radio_volume %1d%"
    },
    "0x0e23": {
      "args": 1,
      "format": "get_mouse_sensibility_to %1d%"
    },
    "0x0e24": {
      "args": 4,
      "format": "fix_char %1d% ground %2d% brightness %3d% and_fade_in %4d%"
    },
    "0x0e25": {
      "format": "is_on_cutscene"
    },
    "0x0e26": {
      "args": 2,
      "format": "is_weapon %1d% fire_type %2d%"
    },
    "0x0e27": {
      "args": 5,
      "format": "get_angle_from_two_coords %1d% %2d% and %3d% %4d% to %5d%"
    },
    "0x0e28": {
      "args": 4,
      "format": "write_struct %1d% offset %2d% size %3d% value %4d%"
    },
    "0x0e29": {
      "args": 6,
      "format": "perlin_noise %1d% frequency %2d% amplitude %3d% lacunarity %4d% persistence %5d% store_to %6d%"
    },
    "0x0e2a": {
      "args": 9,
      "format": "add_cleo_blip %1d% position %2d% %3d% is_short %4d% RGBA %5d% %6d% %7d% %8d% store_to %9d%"
    },
    "0x0e2b": {
      "args": 1,
      "format": "remove_cleo_blip %1d%"
    },
    "0x0e2c": {
      "args": 1,
      "format": "get_current_save_slot %1d%"
    },
    "0x0e2d": {
      "format": "is_game_first_start"
    },
    "0x0e2e": {
      "args": 10,
      "format": "create_render_object_to_char_bone %1d% model %2d% bone %3d% offset %4d% %5d% %6d% rotation %7d% %8d% %9d% store_to %10d%"
    },
    "0x0e2f": {
      "args": 1,
      "format": "delete_render_object %1d%"
    },
    "0x0e30": {
      "args": 4,
      "format": "set_render_object_auto_hide %1d% dead %2d% weapon %3d% car %4d%"
    },
    "0x0e31": {
      "args": 2,
      "format": "set_render_object_visible %1d% %2d%"
    },
    "0x0e32": {
      "args": 4,
      "format": "set_char_coordinates_simple %1d% coord %2d% %3d% %4d%"
    },
    "0x0e33": {
      "args": 5,
      "format": "get_pickup_this_coord %1d% %2d% %3d% only_available %4d% store_to %5d%"
    },
    "0x0e34": {
      "args": 2,
      "format": "get_pickup_model %1d% %2d%"
    },
    "0x0e35": {
      "args": 4,
      "format": "set_render_object_position %1d% %2d% %3d% %4d%"
    },
    "0x0e36": {
      "args": 4,
      "format": "set_render_object_rotation %1d% %2d% %3d% %4d%"
    },
    "0x0e37": {
      "args": 4,
      "format": "set_render_object_scale %1d% %2d% %3d% %4d%"
    },
    "0x0e38": {
      "args": 2,
      "format": "get_pickup_pointer %1d% store_to %2d%"
    },
    "0x0e39": {
      "args": 2,
      "format": "get_pickup_type %1d% store_to %2d%"
    },
    "0x0e3a": {
      "args": 5,
      "format": "set_render_object_distortion %1d% %2d% %3d% %4d% %5d%"
    },
    "0x0e3b": {
      "args": 2,
      "format": "get_audiostream_internal %1d% store_to %2d%"
    },
    "0x0e3c": {
      "args": 2,
      "format": "get_texture_from_sprite %1d% store_to %2d%"
    },
    "0x0e3d": {
      "args": 1,
      "format": "is_key_just_pressed %1d%"
    },
    "0x0e3e": {
      "args": 2,
      "format": "is_button_just_pressed %1d% button %2d%"
    },
    "0x0e3f": {
      "args": 9,
      "format": "convert_3d_to_screen_2d %1d% %2d% %3d% checkNearClip %4d% checkFarClip %5d% store_2d_to %6d% %7d% size_to %8d% %9d%"
    },
    "0x0e40": {
      "args": 1,
      "format": "get_current_hour %1d%"
    },
    "0x0e41": {
      "args": 1,
      "format": "get_current_minute %1d%"
    },
    "0x0e42": {
      "args": 2,
      "format": "is_char_doing_task_id %1d% %2d%"
    },
    "0x0e43": {
      "args": 3,
      "format": "get_char_task_pointer_by_id %1d% %2d% store_to %3d%"
    },
    "0x0e44": {
      "args": 2,
      "format": "get_char_kill_target_char %1d% store_to %2d%"
    },
    "0x0e45": {
      "args": 1,
      "format": "frame_mod %1d%"
    },
    "0x0e46": {
      "args": 1,
      "format": "is_char_using_gun %1d%"
    },
    "0x0e47": {
      "args": 1,
      "format": "is_char_fighting %1d%"
    },
    "0x0e48": {
      "args": 1,
      "format": "is_char_fallen_on_ground %1d%"
    },
    "0x0e49": {
      "args": 1,
      "format": "is_char_entering_any_car %1d%"
    },
    "0x0e4a": {
      "args": 1,
      "format": "is_char_exiting_any_car %1d%"
    },
    "0x0e4b": {
      "args": 2,
      "format": "is_char_playing_any_script_animation %1d% include_anims %2d%"
    },
    "0x0e4c": {
      "args": 2,
      "format": "is_char_doing_any_important_task %1d% include_anims %2d%"
    },
    "0x0e4d": {
      "args": 1,
      "format": "random_percent %1d%"
    },
    "0x0e4e": {
      "args": 2,
      "format": "display_onscreen_timer_local %1d% direction %2d%"
    },
    "0x0e4f": {
      "args": 3,
      "format": "display_onscreen_timer_with_string_local %1d% direction %2d% GXT %3d%"
    },
    "0x0e50": {
      "args": 2,
      "format": "display_onscreen_counter_local %1d% direction %2d%"
    },
    "0x0e51": {
      "args": 3,
      "format": "display_onscreen_counter_with_string_local %1d% direction %2d% GXT %3d%"
    },
    "0x0e52": {
      "args": 2,
      "format": "display_two_onscreen_counters_local %1d% max_value %2d%"
    },
    "0x0e53": {
      "args": 3,
      "format": "display_two_onscreen_counters_with_string_local %1d% max_value %2d% GXT %3d%"
    },
    "0x0e54": {
      "args": 1,
      "format": "clear_onscreen_timer_local %1d%"
    },
    "0x0e55": {
      "args": 1,
      "format": "clear_onscreen_counter_local %1d%"
    },
    "0x0e56": {
      "args": 2,
      "format": "set_onscreen_counter_flash_when_first_displayed_local %1d% flash %2d%"
    },
    "0x0e57": {
      "args": 2,
      "format": "set_timer_beep_countdown_time_local %1d% secs %2d%"
    },
    "0x0e58": {
      "args": 2,
      "format": "set_onscreen_counter_colour_local %1d% color %2d%"
    },
    "0x0e59": {
      "args": 2,
      "format": "get_trailer_from_car %1d% trailer %2d%"
    },
    "0x0e5a": {
      "args": 2,
      "format": "get_car_from_trailer %1d% store_to %2d%"
    },
    "0x0e5b": {
      "args": 7,
      "format": "get_car_dummy_coord %1d% dummy %2d% world_coords %3d% invert_x %4d% store_to %5d% %6d% %7d%",
      "comment": "same as NewOpcodes but this is adapted to VehFuncs"
    },
    "0x0e5c": {
      "args": 2,
      "format": "get_player_health_percent %1d% store_to %2d%"
    },
    "0x0e5d": {
      "args": 1,
      "format": "is_cheat_active %1d%"
    },
    "0x0e5e": {
      "args": 3,
      "format": "change_player_money %1d% mode %2d% value %3d%"
    },
    "0x0e5f": {
      "args": 1,
      "format": "car_horn %1d%"
    },
    "0x0e60": {
      "args": 2,
      "format": "set_camera_control %1d% %2d%"
    },
    "0x0e61": {
      "args": 2,
      "format": "set_car_alarm %1d% mode %2d%"
    },
    "0x0e62": {
      "args": [
        "string",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any"
      ],
      "format": "print %1s% event %2d% at %3d% %4d% scale %5d% %6d% fixAR %7d% style %8d%"
    },
    "0x0e63": {
      "args": [
        "string",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any"
      ],
      "format": "print %1s% event %2d% at %3d% %4d% scale %5d% %6d% fixAR %7d% style %8d% prop %9d% align %10d% wrap %11d% justify %12d% color %13d% %14d% %15d% %16d% outline %17d% shadow %18d% dropColor %19d% %20d% %21d% %22d% background %23d% backColor %24d% %25d% %26d% %27d%"
    },
    "0x0e64": {
      "args": 1,
      "format": "get_camera_mode %1d%"
    },
    "0x0e65": {
      "args": 2,
      "format": "get_car_collision_intensity %1d% store_to %2d%"
    },
    "0x0e66": {
      "args": 4,
      "format": "get_car_collision_coordinates %1d% store_to %2d% %3d% %4d%"
    },
    "0x0e67": {
      "args": 1,
      "format": "is_aim_button_pressed %1d%"
    },
    "0x0e68": {
      "args": 2,
      "format": "set_player_control_pad %1d% %2d%"
    },
    "0x0e69": {
      "args": 2,
      "format": "set_player_control_pad_movement %1d% %2d%"
    },
    "0x0e6a": {
      "args": 2,
      "format": "make_nop %1d% size %2d%"
    },
    "0x0e6b": {
      "args": 2,
      "format": "get_colpoint_lighting %1d% from_night %2d% store_to %3d%"
    },
    "0x0e6c": {
      "args": 1,
      "format": "get_day_night_balance %1d%"
    },
    "0x0e6d": {
      "args": 1,
      "format": "get_underwaterness %1d%"
    },
    "0x0e6e": {
      "format": "is_select_menu_just_pressed"
    },
    "0x0e6f": {
      "format": "stream_custom_script_from_label %1p%"
    },
    "0x0e70": {
      "args": 1,
      "format": "get_last_created_custom_script %1d%"
    },
    "0x0e71": {
      "args": 2,
      "format": "get_object_centre_of_mass_to_base_of_model %1d% %2d%"
    },
    "0x0e72": {
      "args": 2,
      "format": "create_list %1d% store_to %2d%"
    },
    "0x0e73": {
      "args": 1,
      "format": "delete_list %1d%"
    },
    "0x0e74": {
      "args": 2,
      "format": "list_add %1d% value %2d%"
    },
    "0x0e75": {
      "args": 2,
      "format": "list_remove_value %1d% value %2d%"
    },
    "0x0e76": {
      "args": 2,
      "format": "list_remove_index %1d% index %2d%"
    },
    "0x0e77": {
      "args": 2,
      "format": "get_list_size %1d% size %2d%"
    },
    "0x0e78": {
      "args": 3,
      "format": "get_list_value_by_index %1d% index %2d% store_to %3d%"
    },
    "0x0e79": {
      "args": 1,
      "format": "reset_list %1d%"
    },
    "0x0e7a": {
      "args": 3,
      "format": "get_list_string_value_by_index %1d% index %2d% store_to %3d%"
    },
    "0x0e7b": {
      "args": 2,
      "format": "list_add_string %1d% value %2d%"
    },
    "0x0e7c": {
      "args": 2,
      "format": "list_remove_string_value %1d% value %2d%"
    },
    "0x0e7d": {
      "args": 3,
      "format": "list_remove_index %1d% start %2d% end %3d%"
    },
    "0x0e7e": {
      "args": 1,
      "format": "reverse_list %1d%"
    },
    "0x0e7f": {
      "args": 2,
      "format": "get_model_type %1d% store_to %2d%"
    },
    "0x0e80": {
      "args": [
        "string",
        "string",
        "any",
        "any",
        "string"
      ],
      "format": "is_string_equal %1s% %2s% max_size %3d% case_sensitive %4d% ignore_charactere %5s%"
    },
    "0x0e81": {
      "args": [
        "string"
      ],
      "format": "is_string_comment %1s%"
    },
    "0x0e82": {
      "args": 2,
      "format": "does_car_have_part_node %1d% %2d%"
    },
    "0x0e83": {
      "args": 2,
      "format": "get_current_char_weaponinfo %1d% store_to %2d%"
    },
    "0x0e84": {
      "args": 3,
      "format": "get_weaponinfo %1d% skill %2d% store_to %3d%"
    },
    "0x0e85": {
      "args": 3,
      "format": "get_weaponinfo_models %1d% store_to %2d% %3d%"
    },
    "0x0e86": {
      "args": 2,
      "format": "get_weaponinfo_flags %1d% store_to %2d%"
    },
    "0x0e87": {
      "args": 2,
      "format": "get_weaponinfo_animgroup %1d% store_to %2d%"
    },
    "0x0e88": {
      "args": 2,
      "format": "get_weaponinfo_total_clip %1d% store_to %2d%"
    },
    "0x0e89": {
      "args": 2,
      "format": "get_weaponinfo_fire_type %1d% store_to %2d%"
    },
    "0x0e8a": {
      "args": 2,
      "format": "get_weaponinfo_slot %1d% store_to %2d%"
    },
    "0x0e8b": {
      "args": 2,
      "format": "get_char_weapon_state %1d% store_to %2d%"
    },
    "0x0e8c": {
      "args": 2,
      "format": "get_char_weapon_clip %1d% store_to %2d%"
    },
    "0x0e8d": {
      "args": 1,
      "format": "is_any_fire_button_pressed %1d%"
    },
    "0x0e8e": {
      "args": 2,
      "format": "get_char_collision_surface %1d% store_to %2d%"
    },
    "0x0e8f": {
      "args": 2,
      "format": "get_char_collision_lighting %1d% store_to %2d%"
    },
    "0x0e90": {
      "args": 2,
      "format": "get_car_collision_surface %1d% store_to %2d%"
    },
    "0x0e91": {
      "args": 2,
      "format": "get_car_collision_lighting %1d% store_to %2d%"
    },
    "0x0e92": {
      "args": 1,
      "format": "is_char_really_in_air %1d%"
    },
    "0x0e93": {
      "args": 1,
      "format": "is_car_really_in_air %1d%"
    },
    "0x0e94": {
      "args": 1,
      "format": "is_object_really_in_air %1d%"
    },
    "0x0e95": {
      "args": 3,
      "format": "simulate_object_damage %1d% damage %2d% type %3d%"
    },
    "0x0e96": {
      "args": 1,
      "format": "clear_char_primary_tasks %1d%"
    },
    "0x0e97": {
      "args": 1,
      "format": "clear_char_secondary_tasks %1d%"
    },
    "0x0e98": {
      "args": 1,
      "format": "request_priority_model %1d%"
    },
    "0x0e99": {
      "format": "load_all_priority_models_now"
    },
    "0x0e9a": {
      "args": 2,
      "format": "load_special_character_for_id %1d% name %2d%"
    },
    "0x0e9b": {
      "args": 1,
      "format": "unload_special_character_from_id %1d%"
    },
    "0x0e9c": {
      "args": 1,
      "format": "get_model_by_name %1d% store_id %2d%"
    },
    "0x0e9d": {
      "args": 1,
      "format": "get_model_available_by_name %1d%"
    },
    "0x0e9e": {
      "args": 3,
      "format": "get_model_doesnt_exist_in_range %1d% to %2d% store_to %3d%"
    },
    "0x0e9f": {
      "format": "remove_all_unused_models"
    },
    "0x0ea0": {
      "args": 3,
      "format": "set_actor_second_player %1d% enable_camera %2d% separate_cars %3d%"
    },
    "0x0ea1": {
      "args": 1,
      "format": "disable_second_player_restore_camera %1d%"
    },
    "0x0ea2": {
      "args": 1,
      "format": "fix_two_players_separated_cars %1d%"
    },
    "0x0ea3": {
      "args": 1,
      "format": "remove_model_if_unused %1d%"
    },
    "0x0ea4": {
      "args": 1,
      "format": "is_char_on_fire %1d%"
    },
    "0x0ea5": {
      "args": 7,
      "format": "get_closest_cop_near_char %1d% radius %2d% alive %3d% in_car %4d% on_foot %5d% seen_in_front %6d% store_to %7d%"
    },
    "0x0ea6": {
      "args": 8,
      "format": "get_closest_cop_near_char %1d% %2d% %3d% radius %4d% alive %5d% in_car %6d% on_foot %7d% store_to %8d%"
    },
    "0x0ea7": {
      "args": 3,
      "format": "get_any_char_no_save_recursive %1d% progress_to %2d% char_to %3d%"
    },
    "0x0ea8": {
      "args": 3,
      "format": "get_any_car_no_save_recursive %1d% progress_to %2d% car_to %3d%"
    },
    "0x0ea9": {
      "args": 3,
      "format": "get_any_object_no_save_recursive %1d% progress_to %2d% object_to %3d%"
    },
    "0x0eaa": {
      "args": 1,
      "format": "set_char_arrested %1d%"
    },
    "0x0eab": {
      "args": 2,
      "format": "get_char_pedstate %1d% store_to %2d%"
    },
    "0x0eac": {
      "args": 6,
      "format": "get_char_proofs %1d% bullet %2d% fire %3d% explosion %4d% collision %5d% melee %6d%"
    },
    "0x0ead": {
      "args": 6,
      "format": "get_car_proofs %1d% bullet %2d% fire %3d% explosion %4d% collision %5d% melee %6d%"
    },
    "0x0eae": {
      "args": 6,
      "format": "get_object_proofs %1d% bullet %2d% fire %3d% explosion %4d% collision %5d% melee %6d%"
    },
    "0x0eaf": {
      "args": 1,
      "format": "is_char_weapon_visible_set %1d%"
    },
    "0x0eb0": {
      "args": 1,
      "format": "get_forced_weather %1d%"
    },
    "0x0eb1": {
      "args": 2,
      "format": "get_char_stat_id %1d% store_to %2d%"
    },
    "0x0eb2": {
      "args": 6,
      "format": "get_offset_from_camera_in_world_coords %1d% %2d% %3d% store_to %4d% %5d% %6d%"
    },
    "0x0eb3": {
      "args": 4,
      "format": "convert_direction_to_quat %1d% dir %2d% %3d% %4d%"
    },
    "0x0eb4": {
      "args": 4,
      "format": "set_car_coordinates_simple %1d% position %2d% %3d% %4d%"
    },
    "0x0eb5": {
      "args": 5,
      "format": "get_char_damage_last_frame %1d% damager %2d% type %3d% part %4d% intensity %5d%"
    },
    "0x0eb6": {
      "args": 4,
      "format": "get_car_weapon_damage_last_frame %1d% char %2d% type %3d% intensity %4d%"
    },
    "0x0eb7": {
      "format": "is_on_scripted_cutscene"
    },
    "0x0eb8": {
      "format": "is_radar_visible"
    },
    "0x0eb9": {
      "format": "is_hud_visible"
    },
    "0x0eba": {
      "args": 3,
      "format": "get_model_ped_type_and_stat %1d% store_to %2d% %3d%"
    },
    "0x0ebb": {
      "args": 1,
      "format": "pass_time %1d%"
    },
    "0x0ebc": {
      "args": 4,
      "format": "generate_random_int_in_range_with_seed %1d% min %2d% max %3d% store_to %4d%"
    },
    "0x0ebd": {
      "args": 4,
      "format": "generate_random_float_in_range_with_seed %1d% min %2d% max %3d% store_to %4d%"
    },
    "0x0ebe": {
      "args": 4,
      "format": "locate_camera_distance_to_coordinates %1d% %2d% %3d% radius %4d%"
    },
    "0x0ebf": {
      "args": 2,
      "format": "get_fx_system_pointer %1d% store_to %2d%"
    },
    "0x0ec0": {
      "args": 14,
      "format": "add_fx_system_particle %1d% coord %2d% %3d% %4d% vel %5d% %6d% %7d% size %8d% brightness %9d% rgba %10d% %11d% %12d% %13d% lastFactor %14d%"
    },
    "0x0ec1": {
      "args": [
        "string"
      ],
      "format": "is_fx_system_available_with_name %1s%"
    },
    "0x0ec2": {
      "args": [
        "string"
      ],
      "format": "set_string_upper %1s%"
    },
    "0x0ec3": {
      "args": [
        "string"
      ],
      "format": "set_string_lower %1s%"
    },
    "0x0ec4": {
      "args": [
        "any",
        "string",
        "string",
        "any"
      ],
      "format": "string_find %1d% %2s% %3s% store_to %4d%"
    },
    "0x0ec5": {
      "args": 2,
      "format": "cut_string_at %1d% %2d%"
    },
    "0x0ec6": {
      "args": 3,
      "format": "is_string_character_at %1d% character %2d% index %3d%"
    },
    "0x0ec7": {
      "args": 1,
      "format": "get_fade_alpha %1d%"
    },
    "0x0ec8": {
      "args": 2,
      "format": "get_char_random_seed %1d% store_to %2d%"
    },
    "0x0ec9": {
      "args": 2,
      "format": "get_car_random_seed %1d% store_to %2d%"
    },
    "0x0eca": {
      "args": 2,
      "format": "get_object_random_seed %1d% store_to %2d%"
    },
    "0x0ecb": {
      "args": 2,
      "format": "get_char_move_state %1d% store_to %2d%"
    },
    "0x0ecc": {
      "args": 2,
      "format": "dont_delete_char_until_time %1d% %2d%"
    },
    "0x0ecd": {
      "args": 2,
      "format": "dont_delete_car_until_time %1d% %2d%"
    },
    "0x0ece": {
      "args": 2,
      "format": "get_time_char_is_dead %1d% store_to %2d%"
    },
    "0x0ecf": {
      "args": 2,
      "format": "get_time_car_is_dead %1d% store_to %2d%"
    },
    "0x0ed0": {
      "format": "return_script_event"
    },
    "0x0ed1": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_save_confirmation %1d% label %2p% var_slot %3d%"
    },
    "0x0ed2": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_char_delete %1d% label %2p% var_char %3d%"
    },
    "0x0ed3": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_char_create %1d% label %2p% var_char %3d%"
    },
    "0x0ed4": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_car_delete %1d% label %2p% var_car %3d%"
    },
    "0x0ed5": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_car_create %1d% label %2p% var_car %3d%"
    },
    "0x0ed6": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_object_delete %1d% label %2p% var_object %3d%"
    },
    "0x0ed7": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_object_create %1d% label %2p% var_object %3d%"
    },
    "0x0ed8": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_on_menu %1d% label %2p% var_just_paused %3d%"
    },
    "0x0ed9": {
      "args": 2,
      "format": "set_char_ignore_damage_anims %1d% %2d%"
    },
    "0x0eda": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_char_process %1d% label %2p% var_char %3d%"
    },
    "0x0edb": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_car_process %1d% label %2p% var_car %3d%"
    },
    "0x0edc": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_object_process %1d% label %2p% var_object %3d%"
    },
    "0x0edd": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_building_process %1d% label %2p% var_building %3d%"
    },
    "0x0ede": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_char_damage %1d% label %2p% var_char %3d%"
    },
    "0x0edf": {
      "args": [
        "any",
        "address",
        "any"
      ],
      "format": "set_script_event_car_weapon_damage %1d% label %2p% var_car %3d%"
    },
    "0x0ee0": {
      "args": [
        "any",
        "address",
        "any",
        "any",
        "any",
        "any"
      ],
      "format": "set_script_event_bullet_impact %1d% label %2p% var_owner %3d% var_victim %4d% var_weapon %5d% var_colpoint %6d%"
    },
    "0x0ee1": {
      "args": 4,
      "format": "get_colpoint_coordinates %1d% store_to %2d% %3d% %4d%"
    },
    "0x0ee2": {
      "format": "read_struct_offset_multi %1d% offset %2d% total %3d% size %4d%"
    },
    "0x0ee3": {
      "format": "write_struct_offset_multi %1d% offset %2d% count %3d% size %4d%"
    },
    "0x0ee4": {
      "args": 3,
      "format": "locate_char_distance_to_char %1d% char %2d% radius %3d%"
    },
    "0x0ee5": {
      "args": 3,
      "format": "locate_char_distance_to_car %1d% car %2d% radius %3d%"
    },
    "0x0ee6": {
      "args": 3,
      "format": "locate_char_distance_to_object %1d% object %2d% radius %3d%"
    },
    "0x0ee7": {
      "args": 3,
      "format": "locate_car_distance_to_object %1d% object %2d% radius %3d%"
    },
    "0x0ee8": {
      "args": 3,
      "format": "locate_car_distance_to_car %1d% car %2d% radius %3d%"
    },
    "0x0ee9": {
      "args": 3,
      "format": "locate_object_distance_to_object %1d% object %2d% radius %3d%"
    },
    "0x0eea": {
      "args": 5,
      "format": "locate_char_distance_to_coordinates %1d% pos %2d% %3d% %4d% radius %5d%"
    },
    "0x0eeb": {
      "args": 5,
      "format": "locate_car_distance_to_coordinates %1d% pos %2d% %3d% %4d% radius %5d%"
    },
    "0x0eec": {
      "args": 5,
      "format": "locate_object_distance_to_coordinates %1d% pos %2d% %3d% %4d% radius %5d%"
    },
    "0x0eed": {
      "args": 5,
      "format": "locate_object_distance_to_coordinates %1d% pos %2d% %3d% %4d% radius %5d%"
    },
    "0x0eee": {
      "args": 4,
      "format": "get_entity_coordinates %1d% store_to %2d% %3d% %4d%"
    },
    "0x0eef": {
      "args": 2,
      "format": "get_entity_heading %1d% store_to %2d%"
    },
    "0x0ef0": {
      "args": 6,
      "format": "get_coord_from_angled_distance %1d% %2d% angle %3d% dist %4d% store_to %5d% %6d%"
    },
    "0x0ef1": {
      "args": 7,
      "format": "perlin_noise_fractal_2d %1d% %2d% frequency %3d% amplitude %4d% lacunarity %5d% persistence %6d% store_to %7d%"
    },
    "0x0ef2": {
      "args": 8,
      "format": "perlin_noise_fractal_3d %1d% %2d% %3d% frequency %4d% amplitude %5d% lacunarity %6d% persistence %7d% store_to %8d%"
    },
    "0x0ef3": {
      "args": 4,
      "format": "lerp %1d% %2d% %3d% store_to %4d%"
    },
    "0x0ef4": {
      "args": 4,
      "format": "clamp_float %1d% min %2d% max %3d% store_to %4d%"
    },
    "0x0ef5": {
      "args": 1,
      "format": "is_car_owned_by_player %1d%"
    },
    "0x0ef6": {
      "args": 2,
      "format": "set_car_owned_by_player %1d% %2d%"
    },
    "0x0ef7": {
      "args": 4,
      "format": "clamp_int %1d% min %2d% max %3d% store_to %4d%"
    },
    "0x0ef8": {
      "args": 2,
      "format": "get_model_info %1d% store_to %2d%"
    },
    "0x0ef9": {
      "args": 2,
      "format": "get_car_animgroup %1d% store_to %2d%"
    },
    "0x0efa": {
      "args": 2,
      "format": "get_char_fear %1d% store_to %2d%"
    },
    "0x0efb": {
      "args": 1,
      "format": "is_car_double_convertible %1d%"
    },
    "0x0efc": {
      "args": 2,
      "format": "get_car_value %1d% store_to %2d%"
    },
    "0x0efd": {
      "args": 3,
      "format": "get_car_pedals %1d% gas_to %2d% break_to %3d%"
    },
    "0x0efe": {
      "args": 2,
      "format": "get_loaded_library %1d% store_to %2d%"
    },
    "0x0eff": {
      "args": 3,
      "format": "get_char_simplest_active_task %1d% id_to %2d% pointer_to %3d%"
    }
  },
  "debug": {
    "unsupported": []
  }
}
