{
  "$schema": "../schema/configuration.json",
  "meta": {
    "timestamp": "2022-02-06T13:38:22.573829+00:00",
    "sources": [
      "https://github.com/sannybuilder/data",
      "https://github.com/sannybuilder/library"
    ]
  },
  "version": "gtavc_anniversary",
  "parent": "gtavc",
  "commands": {
    "0x059c": {
      "name": "SET_ONSCREEN_COUNTER_FLASH_WHEN_FIRST_DISPLAYED",
      "args": 2,
      "format": "NOP %1d% %2d%"
    },
    "0x059d": {
      "name": "SHUFFLE_CARD_DECKS",
      "args": 1,
      "format": "shuffle_card_decks %1d%",
      "comment": "never used in VC"
    },
    "0x059e": {
      "name": "FETCH_NEXT_CARD",
      "args": 1,
      "format": "get_card_to %1d%",
      "comment": "never used in VC"
    },
    "0x059f": {
      "name": "GET_OBJECT_VELOCITY",
      "args": 4,
      "format": "get_object %1d% velocity %2d% %3d% %4d%",
      "comment": "never used in VC"
    },
    "0x05a0": {
      "name": "IS_DEBUG_CAMERA_ON",
      "flags": [
        "condition"
      ],
      "format": "  is_unused_camera_world_viewer_being_used"
    },
    "0x05a1": {
      "name": "ADD_TO_OBJECT_ROTATION_VELOCITY",
      "args": 4,
      "format": "set_object %1d% rotation_velocity_about_an_axis %2d% %3d% %4d%",
      "comment": "never used in VC"
    },
    "0x05a2": {
      "name": "SET_OBJECT_ROTATION_VELOCITY",
      "args": 4,
      "format": "set_object %1d% rotation_velocity_about_an_axis %2d% %3d% %4d%",
      "comment": "never used in VC"
    },
    "0x05a3": {
      "name": "IS_OBJECT_STATIC",
      "args": 1,
      "flags": [
        "condition"
      ],
      "format": "  object %1d% stopped",
      "comment": "never used in VC"
    },
    "0x05a4": {
      "name": "GET_ANGLE_BETWEEN_2D_VECTORS",
      "args": 5,
      "format": "get_angle_between_vectors_origin_to %1d% %2d% and_origin_to %3d% %4d% store_to %5d%",
      "comment": "never used in VC"
    },
    "0x05a5": {
      "name": "DO_2D_RECTANGLES_COLLIDE",
      "args": 8,
      "flags": [
        "condition"
      ],
      "format": "  is_area_center %1d% %2d% scale %3d% %4d% overlaping_area_center %5d% %6d% scale %7d% %8d%"
    },
    "0x05a6": {
      "name": "GET_OBJECT_ROTATION_VELOCITY",
      "args": 4,
      "format": "get_object %1d% rotation_velocity %2d% %3d% %4d%",
      "comment": "never used in VC"
    },
    "0x05a7": {
      "name": "ADD_VELOCITY_RELATIVE_TO_OBJECT_VELOCITY",
      "args": 4,
      "format": "set_object %1d% velocity %2d% %3d% %4d%",
      "comment": "never used in VC"
    },
    "0x05a8": {
      "name": "GET_OBJECT_SPEED",
      "args": 2,
      "format": "get_object %1d% speed_to %2d%",
      "comment": "never used in VC"
    },
    "0x05a9": {
      "name": "IS_MISSION_SKIP",
      "args": 1,
      "format": "get_mission_skip_level %1d%",
      "comment": "vcmobile opcodes"
    },
    "0x05aa": {
      "name": "SET_IN_AMMUNATION",
      "args": 1,
      "format": "set_is_in_ammunation_button_icon %1d%",
      "comment": "vcmobile opcodes"
    },
    "0x05ab": {
      "name": "DO_SAVE_GAME",
      "args": 1,
      "format": "set_savegame_for_pause %1d%",
      "comment": "vcmobile opcodes"
    },
    "0x05ac": {
      "name": "IS_RETRY",
      "args": 1,
      "format": "get_mission_replay %1d%",
      "comment": "vcmobile opcodes"
    },
    "0x05ad": {
      "name": "DUMMY",
      "flags": [
        "unsupported"
      ]
    },
    "0x05ae": {
      "name": "MARK_CUTSCENE_START",
      "flags": [
        "unsupported"
      ]
    },
    "0x05af": {
      "name": "MARK_CUTSCENE_END",
      "flags": [
        "unsupported"
      ]
    },
    "0x05b0": {
      "name": "CUTSCENE_SCROLL",
      "flags": [
        "unsupported"
      ]
    },
    "0x05b1": {
      "name": "SET_LVAR_TEXT_LABEL_TO_LVAR_TEXT_LABEL",
      "flags": [
        "unsupported"
      ]
    },
    "0x05b2": {
      "name": "SET_VAR_TEXT_LABEL_TO_LVAR_TEXT_LABEL",
      "flags": [
        "unsupported"
      ]
    },
    "0x05b3": {
      "name": "SET_LVAR_TEXT_LABEL_TO_VAR_TEXT_LABEL",
      "flags": [
        "unsupported"
      ]
    },
    "0x05b4": {
      "name": "VAR_TEXT_LABEL",
      "args": [
        "global_string"
      ],
      "flags": [
        "unsupported"
      ]
    },
    "0x05b5": {
      "name": "LVAR_TEXT_LABEL",
      "args": [
        "local_string"
      ],
      "flags": [
        "unsupported"
      ]
    },
    "0x05b6": {
      "name": "IS_TEXT_LABEL_VAR_EQUAL_TO_TEXT_LABEL",
      "flags": [
        "unsupported"
      ]
    },
    "0x05b7": {
      "name": "IS_TEXT_LABEL_LVAR_EQUAL_TO_TEXT_LABEL",
      "flags": [
        "unsupported"
      ]
    },
    "0x05b8": {
      "name": "IS_TEXT_LABEL_VAR_EQUAL_TO_TEXT_LABEL_VAR",
      "flags": [
        "unsupported"
      ]
    },
    "0x05b9": {
      "name": "IS_TEXT_LABEL_LVAR_EQUAL_TO_TEXT_LABEL_LVAR",
      "flags": [
        "unsupported"
      ]
    },
    "0x05ba": {
      "name": "IS_TEXT_LABEL_VAR_EQUAL_TO_TEXT_LABEL_LVAR",
      "flags": [
        "unsupported"
      ]
    },
    "0x05bb": {
      "name": "DO_2D_LINES_INTERSECT",
      "flags": [
        "unsupported"
      ]
    },
    "0x05bc": {
      "name": "GET_2D_LINES_INTERSECT_POINT",
      "flags": [
        "unsupported"
      ]
    },
    "0x05bd": {
      "name": "IS_2D_POINT_IN_TRIANGLE",
      "flags": [
        "unsupported"
      ]
    },
    "0x05be": {
      "name": "IS_2D_POINT_IN_RECTANGLE_ON_LEFT_SIDE_OF_LINE",
      "flags": [
        "unsupported"
      ]
    },
    "0x05bf": {
      "name": "IS_2D_POINT_ON_LEFT_SIDE_OF_2D_LINE",
      "flags": [
        "unsupported"
      ]
    },
    "0x05c0": {
      "name": "CHAR_LOOK_AT_OBJECT_ALWAYS",
      "flags": [
        "unsupported"
      ]
    },
    "0x05c1": {
      "name": "APPLY_COLLISION_ON_OBJECT",
      "flags": [
        "unsupported"
      ]
    },
    "0x05c2": {
      "name": "SAVE_STRING_TO_DEBUG_FILE",
      "args": [
        {
          "type": "string",
          "operand_type": "string128"
        }
      ],
      "flags": [
        "unsupported"
      ]
    },
    "0x0dd0": {
      "args": [
        "any",
        "address"
      ],
      "format": "%1d% = get_label_addr %2p%",
      "desc": "Stores the absolute address of a code location marked with the label",
      "comment": "android"
    },
    "0x0dd1": {
      "args": 2,
      "format": "%1d% = get_func_addr_by_cstr_name %2d%",
      "desc": "Obtains the address of the corresponding function and variable in the game library according to the string pointer",
      "comment": "android"
    },
    "0x0dd2": {
      "args": 1,
      "format": "context_call_func %1d%",
      "desc": "Calls a function at the address with parameters set with 0DD3",
      "comment": "android"
    },
    "0x0dd3": {
      "args": 2,
      "format": "context_set_reg %1d% value %2d%",
      "desc": "Sets the value of the register R0-R3 used as an argument in the function call (0DD2)",
      "comment": "android"
    },
    "0x0dd4": {
      "args": 2,
      "format": "%1d% = context_get_reg %2d%",
      "desc": "Returns the value of the register R0/R1 that stores the function result (0DD2)",
      "comment": "android"
    },
    "0x0dd6": {
      "args": 1,
      "format": "%1d% = get_game_version",
      "desc": "Returns internal game version",
      "comment": "android"
    },
    "0x0dd7": {
      "args": 1,
      "format": "%1d% = get_image_base",
      "desc": "Returns image base of the main game library",
      "comment": "android"
    },
    "0x0dd8": {
      "args": 4,
      "format": "%1d% = read_mem_addr %2d% size %3d% add_ib %4d%",
      "desc": "Reads a value from the game memory",
      "comment": "android"
    },
    "0x0dd9": {
      "args": 5,
      "format": "write_mem_addr %1d% value %2d% size %3d% add_ib %4d% protect %5d%",
      "desc": "Writes a value to the game memory",
      "comment": "android"
    },
    "0x0ddc": {
      "args": 2,
      "format": "set_mutex_var %1d% to %2d%",
      "desc": "Sets the value of the global shared variable in CLEO, Var id can be any integer value. Please note that you cannot use a variable with ID 0 to save custom data, because all scripts that use the CLEO menu GUI use a shared global variable with ID 0, which represents the state of anything on the screen. If its value is 0, the script can be displayed and the CLEO menu GUI can be opened. If the value is 1, it is closed and the CLEO menu cannot be opened. ID 0 always represents the status value of the CLEO menu. You can use other ID values to save data",
      "comment": "android"
    },
    "0x0ddd": {
      "args": 2,
      "format": "%1d% = get_mutex_var %2d%",
      "desc": "Gets the value of the CLEO global shared variable. See 0DDC",
      "comment": "android"
    },
    "0x0de0": {
      "args": 3,
      "format": "%1d% = get_touch_point_state %2d% mintime %3d%",
      "desc": "Returns result of the requested touch action check, can be 0 or 1. On PSP always returns 0. Touch points is the CLEO Android engine implemented touch detection system which divides touchscreen into 9 parts called touch points, they can be used to detect timed touche, How long to touch an area at the minimum",
      "comment": "android"
    },
    "0x0de1": {
      "args": 5,
      "format": "%1d% = get_touch_slide_state from %2d% to %3d% mintime %4d% maxtime %5d%",
      "desc": "Returns the state of the Touch points area of the swipe screen.  Swipe from one area to another, and set the sliding time range, See 0DE0",
      "comment": "android"
    },
    "0x0de2": {
      "args": 1,
      "format": "%1d% = get_menu_button_state",
      "desc": "Returns state of the Android hardware menu button, can be 0 or 1, a lot of devices have no button like this. On PSP always returns 0. Such buttons are only available on old smart phones and semi-smart phones. The current smart phones no longer have such buttons",
      "comment": "read opcode info before using ; android"
    },
    "0x0de3": {
      "args": 2,
      "format": "%1d% = get_menu_button_pressed mintime %2d%",
      "desc": "Returns to the state where the Android hardware menu button is pressed at the specified time. See 0DE2",
      "comment": "read opcode info before using ; android"
    }
  },
  "debug": {
    "unsupported": [
      "DUMMY",
      "MARK_CUTSCENE_START",
      "MARK_CUTSCENE_END",
      "CUTSCENE_SCROLL",
      "SET_LVAR_TEXT_LABEL_TO_LVAR_TEXT_LABEL",
      "SET_VAR_TEXT_LABEL_TO_LVAR_TEXT_LABEL",
      "SET_LVAR_TEXT_LABEL_TO_VAR_TEXT_LABEL",
      "VAR_TEXT_LABEL",
      "LVAR_TEXT_LABEL",
      "IS_TEXT_LABEL_VAR_EQUAL_TO_TEXT_LABEL",
      "IS_TEXT_LABEL_LVAR_EQUAL_TO_TEXT_LABEL",
      "IS_TEXT_LABEL_VAR_EQUAL_TO_TEXT_LABEL_VAR",
      "IS_TEXT_LABEL_LVAR_EQUAL_TO_TEXT_LABEL_LVAR",
      "IS_TEXT_LABEL_VAR_EQUAL_TO_TEXT_LABEL_LVAR",
      "DO_2D_LINES_INTERSECT",
      "GET_2D_LINES_INTERSECT_POINT",
      "IS_2D_POINT_IN_TRIANGLE",
      "IS_2D_POINT_IN_RECTANGLE_ON_LEFT_SIDE_OF_LINE",
      "IS_2D_POINT_ON_LEFT_SIDE_OF_2D_LINE",
      "CHAR_LOOK_AT_OBJECT_ALWAYS",
      "APPLY_COLLISION_ON_OBJECT",
      "SAVE_STRING_TO_DEBUG_FILE"
    ]
  }
}
